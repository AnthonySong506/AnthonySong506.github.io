<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>獨立之精神，自由之思想</title>
  
  <subtitle>鐵肩擔道義，妙手著文章</subtitle>
  <link href="http://anthonysong506.github.io/atom.xml" rel="self"/>
  
  <link href="http://anthonysong506.github.io/"/>
  <updated>2023-03-17T10:59:01.628Z</updated>
  <id>http://anthonysong506.github.io/</id>
  
  <author>
    <name>Sou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>高级程序设计枚举章</title>
    <link href="http://anthonysong506.github.io/posts/b3b62ea9.html"/>
    <id>http://anthonysong506.github.io/posts/b3b62ea9.html</id>
    <published>2023-03-17T00:04:50.000Z</published>
    <updated>2023-03-17T10:59:01.628Z</updated>
    
    <content type="html"><![CDATA[<h2 id="高级程序设计枚举章"><a href="#高级程序设计枚举章" class="headerlink" title="高级程序设计枚举章"></a>高级程序设计枚举章</h2><h3 id="普通枚举"><a href="#普通枚举" class="headerlink" title="普通枚举"></a>普通枚举</h3><p>题目-奶牛碑文<br>Description<br>小伟暑假期间到大草原旅游，在一块石头上发现了一些有趣的碑文。碑文似乎是一个神秘古老的语言，只包括三个大写字母 C、O 和 W。尽管小伟看不懂，但是令他高兴的是，C、O、W的顺序形式构成了一句他最喜欢的奶牛单词“COW”。现在，他想知道有多少次 COW 出现在文本中。<br>如果 COW 内穿插了其他字符，只要 COW 字符出现在正确的顺序，小伟也不介意。甚至，他也不介意出现不同的 COW 共享一些字母。例如，CWOW 出现了 1 次 COW，CCOW 算出现了2 次 COW，CCOOWW 算出现了 8 次 COW。<br>Input<br>第 1 行为 1 个整数 N。<br>第 2 行为 N 个字符的字符串，每个字符是一个 C、O 或 W。<br>Output<br>输出 COW 作为输入字符串的子串出现的次数（不一定是连续的）。<br>提示：答案会很大，建议用 64 位整数（long long）。<br>Sample Input<br>6<br>COOWWW<br>Sample Output<br>6<br>Hint<br>对于 50% 的数据满足：N≤60。<br>对于 100% 的数据满足：N≤100000。<br>单组输入</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="type">int</span> i,j,n,k;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">100000</span>];</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; a;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i &lt; n<span class="number">-2</span> ;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n<span class="number">-1</span>;j++)</span><br><span class="line">            <span class="keyword">for</span>(k=j+<span class="number">1</span>;k&lt;n;k++)</span><br><span class="line">                <span class="keyword">if</span>(a[i]==<span class="string">&#x27;C&#x27;</span> &amp;&amp; a[j]==<span class="string">&#x27;O&#x27;</span> &amp;&amp; a[k]==<span class="string">&#x27;W&#x27;</span>)num++;</span><br><span class="line">    cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二进制枚举"><a href="#二进制枚举" class="headerlink" title="二进制枚举"></a>二进制枚举</h3><p>二进制：是计算技术中广泛采用的一种数制。二进制数据是用0和1两个数码来表示的数。它的基数为2，进位规则是“逢二进一”，借位规则是“借一当二”<br>子集：是一个数学概念：如果集合A的任意一个元素都是集合B的元素，那么集合A称为集合B的子集。<br>含有N个元素的集合的一切子集的个数为 2^n。简单证明一下：<br>含有0个元素的子集有C(N,0)个，<br>含有1个元素的子集有C(N,1)个，<br>含有2个元素的子集有C(N,2)个，<br>…<br>含有N个元素的子集有C(N,N)个<br>由二项式系数的性质可得：C(N,0)+C(N,1)+C(N,2)+…+C(N,N)&#x3D;2^n。</p><p>自学二进制枚举后自己理解<br>根据我自己的理解来说二进制枚举就是通过二进制只有0和1两个数值来表示其代表的值是否被我们选中。<br>所解决的问题：他所解决的问题就是已经告诉我们一个固定数量的值或数，并让我们来计算我们能有多少种不同的选择结果。</p><p>首先来补充一波知识<br>按位与运算（&amp;）<br>A&amp;B（A，B表示十进制数）表示将A，B转换成十进制数进行比较，如：1&amp;0&#x3D;0；1&amp;1&#x3D;1；0&amp;0&#x3D;0；3&amp;5&#x3D;011&amp;101&#x3D;001；</p><p>移位运算符（&lt;&lt;）<br>A(&lt;&lt;)B代表把A转为二进制后向左移B位（在A的二进制数后添加B个0）；例如4的二进制为0100，而16转为二进制为010000，所以4&lt;&lt;2&#x3D;16；从上面的例子可以看出A(&lt;&lt;)B的值实质上就是A乘以2的B次方，，并且二进制数在其后面添0就表示该二进制数乘以2。<br>通常认为A(&lt;&lt;)B比A*B更快，因为前者是更基于底层的操作。</p><p>接下来我们就来看些题目来实战一下吧<br>1.锐锐有一个神奇的口袋，总的容积是40，用这个口袋可以变出一些物品，这些物品的总体积必须是40。锐锐现在有n个想要得到的物品，每个物品的体积分别是a1，a2……an。锐锐可以从这些物品中选择一些，如果选出的物体的总体积是40，那么利用这个神奇的口袋，锐锐就可以得到这些物品。现在的问题是，锐锐有多少种不同的选择物品的方式。<br>输入格式：输入的第一行是正整数n (1 &lt;&#x3D; n &lt;&#x3D; 20)，表示不同的物品的数目。接下来的n行，每行有一个1到40之间的正整数，分别给出a1，a2……an的值。<br>输出格式：输出不同的选择物品的方式的数目。<br>分析：假设输入为<br>3<br>20<br>20<br>20<br>那么那么我们就可以很容易的知道这最终输出的结果为3，因为a1,a2,a3都为20<br>那么此时因为有3个数那么用三位二进制数就可以表示相应的a1,a2,a3是否被选中。<br>![01H__7R1ROHTHQ_&#96;__F_SJJ.png](<a href="https://s2.loli.net/2023/03/17/TQRNPHnZbXMmExo.png">https://s2.loli.net/2023/03/17/TQRNPHnZbXMmExo.png</a>)<br>因为这三个数据每个都有0或1两种状态，因此他就有7种转态来表示其不同的选择情况分别为：<br>a1 a2 a3<br>0 0 0<br>0 0 1<br>0 1 0<br>0 1 1<br>1 0 0<br>1 0 1<br>1 1 0<br>1 1 1<br>因此代码为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> number,arg[<span class="number">20</span>],nu=<span class="number">0</span>,sum;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;number);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;number;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;arg[i]);<span class="comment">//输入每个数值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;number);i++)&#123;<span class="comment">//1&lt;&lt;number表示我们要循环的每一种不同的情况次数</span></span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j&lt;number;j++)</span><br><span class="line"><span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;j)) sum = sum +arg[j];<span class="comment">//这里i&amp;（1&lt;&lt;j）就表示每一种不同的数倍选中的状态，若果他为0（表示没被选中）就将他加起来</span></span><br><span class="line"><span class="keyword">if</span>(sum==<span class="number">40</span>) nu++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;nu&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.题目：<br>    诗仙李白的郁闷事<br>大诗人李白，一生好饮。一天，他提着酒壶，从家里出来，酒壶中有酒两斗。他边走边唱：<br>     无事街上走，提壶去打酒<br>     逢店加一倍，遇花喝一斗。<br>  这一路上，他一共遇到店5次，遇到花10次，已知最后一次遇到的是花，此时他正好把酒喝光了。请你计算李白遇到店和花的次序，并统计有多少种可能的方案。<br>题解：<br>已知遇到店5次，遇到花10次，并且最后一次遇到花正好把酒喝光。<br>诗仙李白遇到的店和花两种状态可以用0&#x2F;1表示，假设用1表示店，0表示花。<br>5个店和10个花，最后一次遇到花即0，此时酒刚好剩一斗。<br>因此，李白前面共遇到5个店和9个花，即寻找5个1和9个0组成的14位二进制数，使得2斗最终变为1斗的方案。<br>因此我们枚举出14位二进制数表示范围中的每个数i，然后提取其各位上的值，1就把酒量加倍且统计店数加1，0就让酒量减1，当最终算出酒量为1，且店数为5时（此时0的个数就是9个），即为方案之一。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> shop=<span class="number">0</span>,wine=<span class="number">2</span>,x,n=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">1</span>&lt;&lt;<span class="number">14</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        x=wine;</span><br><span class="line">        shop=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">14</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&amp;<span class="number">1</span>&lt;&lt;j)</span><br><span class="line">            &#123;</span><br><span class="line">                x=x*<span class="number">2</span>;</span><br><span class="line">                shop++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                x--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">1</span>&amp;&amp;shop==<span class="number">5</span>) n++;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;n;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.题目：<br>陈老师加油<br>Description<br>陈老师经常开车在哈尔滨的大街上行走，假设刚开始油箱里有T升汽油，每看见加油站陈老师就要把汽油的总量翻倍（就是乘2）；每看见十字路口气油就要减少1升；最后的时候陈老师的车开到一个十字路口，然后车就没油了——就熄火了，陈老师好痛苦啊~~~！<br>然后他就开始回忆，一路上一共遇到5个加油站，10个十字路口，问造成这种惨烈的境遇有多少种可能？<br>Input<br>输入一个T ，（1&lt;&#x3D;T&lt;&#x3D;100）;<br>Output<br>输出可能的方案数。<br>Sample Input:<br>1<br>Sample Output:<br>10</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> T,i,j;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;T)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;<span class="number">15</span>);i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> k1=<span class="number">0</span>,k2=<span class="number">0</span>,tmp=T;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">15</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;j))</span><br><span class="line">                &#123;</span><br><span class="line">                  tmp*=<span class="number">2</span>;</span><br><span class="line">                  k1++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    tmp--;</span><br><span class="line">                    k2++;</span><br><span class="line">                    <span class="keyword">if</span>(tmp&lt;=<span class="number">0</span>)</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(k1==<span class="number">5</span>&amp;&amp;k2==<span class="number">10</span>&amp;&amp;tmp==<span class="number">0</span>) sum++;</span><br><span class="line">        &#125;</span><br><span class="line">            cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;高级程序设计枚举章&quot;&gt;&lt;a href=&quot;#高级程序设计枚举章&quot; class=&quot;headerlink&quot; title=&quot;高级程序设计枚举章&quot;&gt;&lt;/a&gt;高级程序设计枚举章&lt;/h2&gt;&lt;h3 id=&quot;普通枚举&quot;&gt;&lt;a href=&quot;#普通枚举&quot; class=&quot;headerli</summary>
      
    
    
    
    
    <category term="枚举 二进制枚举" scheme="http://anthonysong506.github.io/tags/%E6%9E%9A%E4%B8%BE-%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>Acwing算法基础动态规划DP(一)</title>
    <link href="http://anthonysong506.github.io/posts/ce09137c.html"/>
    <id>http://anthonysong506.github.io/posts/ce09137c.html</id>
    <published>2023-03-16T10:22:50.000Z</published>
    <updated>2023-03-17T10:59:03.491Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Acwing算法基础动态规划DP-一"><a href="#Acwing算法基础动态规划DP-一" class="headerlink" title="Acwing算法基础动态规划DP(一)"></a>Acwing算法基础动态规划DP(一)</h2><h3 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h3><p>这是采用最常见的二维数组状态转移方程来完成<br>代码实现如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> v[N],w[N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;v[i]&gt;&gt;w[i];</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i][j]=f[i<span class="number">-1</span>][j];<span class="comment">//j装不下v[i]的情况</span></span><br><span class="line">        <span class="keyword">if</span>(j&gt;=v[i]) f[i][j]=<span class="built_in">max</span>(f[i][j],f[i<span class="number">-1</span>][j-v[i]]+w[i]);<span class="comment">//j能装下v[i]的情况</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">cout&lt;&lt;f[n][m]&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是采用的滚动数组压缩空间，即一维数组来完成的状态转移方程</p><p>之所以能转换一维数组<br>第一，是这个i只用到了i和i-1，所以提醒了我们可以使用滚动数组压缩<br>第二，是这个[j]这个范围只小于等于j，不能超过j</p><p>然后重点是怎么转换：<br>在于第二个循环，在二维数组中j采用的是正循环，那么现在j若正循环，那么更新的是第i层的状态，但是原本的状态转移方程<br>需要的i-1的状态，因为j-v[i]是严格小于j的，而原本j是从小到大枚举的，那相当于你在计算f[j]的时候<br>你的f[j-v[i]]已经被计算过了，导致你计算成了第i层的f[j-v[i]]，所以需要倒循环。<br>代码实现如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> v[N],w[N];</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;v[i]&gt;&gt;w[i];</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=v[i];j--)</span><br><span class="line">    &#123;</span><br><span class="line">       f[j]=<span class="built_in">max</span>(f[j],f[j-v[i]]+w[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;f[m]&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="01背包变体：何以解忧4700"><a href="#01背包变体：何以解忧4700" class="headerlink" title="01背包变体：何以解忧4700"></a>01背包变体：何以解忧4700</h3><p>这个题其实是01背包的变体，首先我想要花的钱最少，同时还要大于x,那么我先算所有书的钱<br>拿掉钱最多的就是花最少的钱，但是有限制就是大于x，那么怎么解决这个问题呢？<br>因为总的钱-花的钱&gt;x，所以花的钱&lt;总的钱-x,然后每本书只有一个，这就变成了一个典型的01背包问题！</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dp[<span class="number">300010</span>];</span><br><span class="line"><span class="type">int</span> a[<span class="number">35</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="type">int</span> n,x;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;x;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    cin&gt;&gt;a[i];</span><br><span class="line">    sum+=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=sum-x;j&gt;=a[i];j--)&#123;</span><br><span class="line">dp[j]=<span class="built_in">max</span>(dp[j],dp[j-a[i]]+a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    cout&lt;&lt;sum-dp[sum-x];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Acwing算法基础动态规划DP-一&quot;&gt;&lt;a href=&quot;#Acwing算法基础动态规划DP-一&quot; class=&quot;headerlink&quot; title=&quot;Acwing算法基础动态规划DP(一)&quot;&gt;&lt;/a&gt;Acwing算法基础动态规划DP(一)&lt;/h2&gt;&lt;h3 id=</summary>
      
    
    
    
    
    <category term="01背包" scheme="http://anthonysong506.github.io/tags/01%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>Acwing算法基础基础算法一</title>
    <link href="http://anthonysong506.github.io/posts/9c863c7e.html"/>
    <id>http://anthonysong506.github.io/posts/9c863c7e.html</id>
    <published>2023-03-16T10:21:50.000Z</published>
    <updated>2023-03-16T10:22:38.986Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Acwing算法基础基础算法一"><a href="#Acwing算法基础基础算法一" class="headerlink" title="Acwing算法基础基础算法一"></a>Acwing算法基础基础算法一</h2><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p>快速排序算法通过多次比较和交换来实现排序，其排序流程如下：<br>(1)首先设定一个分界值，通过该分界值将数组分成左右两部分。<br>(2)将大于或等于分界值的数据集中到数组右边，小于分界值的数据集中到数组的左边。此时，左边部分中各元素都小于分界值，而右边部分中各元素都大于或等于分界值。<br>(3)然后，左边和右边的数据可以独立排序。对于左侧的数组数据，又可以取一个分界值，将该部分数据分成左右两部分，同样在左边放置较小值，右边放置较大值。右侧的数组数据也可以做类似处理。<br>(4)重复上述过程，可以看出，这是一个递归定义。通过递归将左侧部分排好序后，再递归排好右侧部分的顺序。当左、右两个部分各数据排序完成后，整个数组的排序也就完成了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N =<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[],<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> x=q[(r+l)/<span class="number">2</span>],i=l<span class="number">-1</span>,j=r+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i++;<span class="keyword">while</span>(q[i]&lt;x);</span><br><span class="line">        <span class="keyword">do</span> j--;<span class="keyword">while</span>(q[j]&gt;x);</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j) <span class="built_in">swap</span>(q[i],q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="built_in">quick_sort</span>(q,l,j);<span class="comment">//如果这里要使用i-1和i的话，那么x不能取l和(r+l)&gt;&gt;1,就得取r或者(r+l+1)&gt;&gt;1</span></span><br><span class="line">     <span class="built_in">quick_sort</span>(q,j+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);<span class="comment">//faster than cin如果是java一定用bufferread比scanf快20倍</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    <span class="built_in">quick_sort</span>(q,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Acwing算法基础基础算法一&quot;&gt;&lt;a href=&quot;#Acwing算法基础基础算法一&quot; class=&quot;headerlink&quot; title=&quot;Acwing算法基础基础算法一&quot;&gt;&lt;/a&gt;Acwing算法基础基础算法一&lt;/h2&gt;&lt;h3 id=&quot;快速排序&quot;&gt;&lt;a href</summary>
      
    
    
    
    
    <category term="快速排序 二分" scheme="http://anthonysong506.github.io/tags/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F-%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>计算机组成原理第一章</title>
    <link href="http://anthonysong506.github.io/posts/46fb21b5.html"/>
    <id>http://anthonysong506.github.io/posts/46fb21b5.html</id>
    <published>2023-03-13T10:42:06.000Z</published>
    <updated>2023-03-14T05:10:45.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计算机组成原理第一章"><a href="#计算机组成原理第一章" class="headerlink" title="计算机组成原理第一章"></a>计算机组成原理第一章</h2><p><img src="https://s2.loli.net/2023/03/14/Auikm93BobQIHYW.jpg" alt="104011498_p0.jpg" title="云堇 from pixiv：雨様"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;计算机组成原理第一章&quot;&gt;&lt;a href=&quot;#计算机组成原理第一章&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理第一章&quot;&gt;&lt;/a&gt;计算机组成原理第一章&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2023/03/</summary>
      
    
    
    
    
    <category term="计组" scheme="http://anthonysong506.github.io/tags/%E8%AE%A1%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>关于Aidlux中vscode配置c/c++的问题</title>
    <link href="http://anthonysong506.github.io/posts/94d1d3be.html"/>
    <id>http://anthonysong506.github.io/posts/94d1d3be.html</id>
    <published>2022-12-08T13:53:50.000Z</published>
    <updated>2022-12-08T14:00:03.253Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于Aidlux-linux-中vscode配置c-x2F-c-的问题"><a href="#关于Aidlux-linux-中vscode配置c-x2F-c-的问题" class="headerlink" title="关于Aidlux(linux)中vscode配置c&#x2F;c++的问题"></a>关于Aidlux(linux)中vscode配置c&#x2F;c++的问题</h2><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>第一步:安装vscode</p><p>第二步:安装基础环境,之前有些文章是有问题的，gcc装不上<br>会出现如下问题:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$Err http://gb.archive.ubuntu.com/ubuntu/ precise-updates/main mysql-common all <span class="number">5</span>.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span></span><br><span class="line">  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">194</span>.<span class="number">169</span>.<span class="number">254</span>.<span class="number">10</span> <span class="number">80</span>]</span><br><span class="line">$Err http://security.ubuntu.com/ubuntu/ precise-security/main mysql-common all <span class="number">5</span>.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span></span><br><span class="line">  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">91</span>.<span class="number">189</span>.<span class="number">91</span>.<span class="number">15</span> <span class="number">80</span>]</span><br><span class="line">$Err http://security.ubuntu.com/ubuntu/ precise-security/main libmysqlclient18 i386 <span class="number">5</span>.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span></span><br><span class="line">  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">91</span>.<span class="number">189</span>.<span class="number">91</span>.<span class="number">15</span> <span class="number">80</span>]</span><br><span class="line">$Err http://security.ubuntu.com/ubuntu/ precise-security/main mysql-client-core-<span class="number">5</span>.<span class="number">5</span> i386 <span class="number">5</span>.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span></span><br><span class="line">  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">91</span>.<span class="number">189</span>.<span class="number">91</span>.<span class="number">15</span> <span class="number">80</span>]</span><br><span class="line">$Err http://security.ubuntu.com/ubuntu/ precise-security/main mysql-client-<span class="number">5</span>.<span class="number">5</span> i386 <span class="number">5</span>.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span></span><br><span class="line">  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">91</span>.<span class="number">189</span>.<span class="number">91</span>.<span class="number">15</span> <span class="number">80</span>]</span><br><span class="line">$Err http://security.ubuntu.com/ubuntu/ precise-security/main mysql-client all <span class="number">5</span>.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span></span><br><span class="line">  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">91</span>.<span class="number">189</span>.<span class="number">91</span>.<span class="number">15</span> <span class="number">80</span>]</span><br><span class="line">$Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/m/mysql-<span class="number">5</span>.<span class="number">5</span>/mysql-common_5.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span>_all.deb  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">91</span>.<span class="number">189</span>.<span class="number">91</span>.<span class="number">15</span> <span class="number">80</span>]</span><br><span class="line">$Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/m/mysql-<span class="number">5</span>.<span class="number">5</span>/libmysqlclient18_5.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span>_i386.deb  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">91</span>.<span class="number">189</span>.<span class="number">91</span>.<span class="number">15</span> <span class="number">80</span>]</span><br><span class="line">$Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/m/mysql-<span class="number">5</span>.<span class="number">5</span>/mysql-client-core-<span class="number">5</span>.<span class="number">5</span>_5.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span>_i386.deb  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">91</span>.<span class="number">189</span>.<span class="number">91</span>.<span class="number">15</span> <span class="number">80</span>]</span><br><span class="line">$Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/m/mysql-<span class="number">5</span>.<span class="number">5</span>/mysql-client-<span class="number">5</span>.<span class="number">5</span>_5.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span>_i386.deb  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">91</span>.<span class="number">189</span>.<span class="number">91</span>.<span class="number">15</span> <span class="number">80</span>]</span><br><span class="line">$Failed to fetch http://security.ubuntu.com/ubuntu/pool/main/m/mysql-<span class="number">5</span>.<span class="number">5</span>/mysql-client_5.<span class="number">5</span>.<span class="number">34</span>-<span class="number">0</span>ubuntu0.<span class="number">12</span>.<span class="number">04</span>.<span class="number">1</span>_all.deb  <span class="number">404</span>  <span class="keyword">Not</span> Found [IP: <span class="number">91</span>.<span class="number">189</span>.<span class="number">91</span>.<span class="number">15</span> <span class="number">80</span>]</span><br><span class="line">$E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?</span><br></pre></td></tr></table></figure><p>尝试用下面这个命令:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sudo apt-get update</span><br></pre></td></tr></table></figure><p>然后再输入:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$apt install -y gcc g++ clang gdb</span><br></pre></td></tr></table></figure><p>至此gcc环境就配置好了</p><p>第三步:输入\home目录，在这个目录下编译</p><p>第四步:在扩展程序中下载clangd,C&#x2F;C++ Runner,Code Runner<br>至此全部配置完毕</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关于Aidlux-linux-中vscode配置c-x2F-c-的问题&quot;&gt;&lt;a href=&quot;#关于Aidlux-linux-中vscode配置c-x2F-c-的问题&quot; class=&quot;headerlink&quot; title=&quot;关于Aidlux(linux)中vscode</summary>
      
    
    
    
    
  </entry>
  
</feed>
